# AIME API Endpoint Configuration File
#
# Copyright (c) AIME GmbH and affiliates. Find more info at https://www.aime.info/api
#
# This software may be used and distributed according to the terms of the MIT LICENSE

[ENDPOINT]
title = "WhisperX"
name = "whisper_x"
description = "WhisperX example API"
methods = ["GET", "POST"]
version = 0

[WORKER]
job_type = "whisper_x"
auth_key = "5b07e305b50505ca2b3284b4ae5f65d8"

[CLIENTS]
client_request_limit = 0
provide_worker_meta_data = true	# default is false

# client default authorization and authentication method (overwrites the value of server configuration)
# Available authentication: None, User, IP, Pubkey
# authentication = "User"
# Available authorization: None, Key
# authorization = "Key"
# authorization_keys = { "aime" = "6a17e2a5b70603cb1a3294b4a1df67da" }


[SESSION]
# variables that should be kept in the session between calls and provided to the worker as additional inputs

[INPUTS]
text_input.type = "string"
audio_input.type = "audio"
audio_input.format = { supported = [ "MP3" ], default = "MP3", auto_convert = true }
audio_input.sample_rate = { supported = [ 16000 ], default = 16000, auto_convert = true }
audio_input.sample_bit_depth = { supported = [ 16, 32], default = 16, auto_convert = true }
audio_input.audio_bit_rate = { max = 64000, auto_convert = true } # in bit/s
audio_input.channels = { supported = [1], default = 1, auto_convert = true }
audio_input.check_conversion = true # another ffprobe check and logs a warning if the target media parameters are different to the measured media parameters
audio_input.input_temp_file = "auto" # "auto": temp file is generated automatically for image format "tiff" and "gif" and for input type "audio", ("yes", "no", "auto")
audio_input.output_temp_file = "auto" # "auto": temp file is generated automatically for conversion to "mp4" format, ("yes", "no", "auto")
generate_audio.type = "bool"
src_lang.type = "selection"
src_lang.default = "none"
src_lang.supported = [
    "af", "am", "ar", "as", "az", "ba", "be", "bg", "bn", "bo", "br", "bs",
    "ca", "cs", "cy", "da", "de", "el", "en", "es", "et", "eu", "fa", "fi",
    "fo", "fr", "gl", "gu", "ha", "haw", "he", "hi", "hr", "ht", "hu", "hy",
    "id", "is", "it", "ja", "jw", "ka", "kk", "km", "kn", "ko", "la", "lb",
    "ln", "lo", "lt", "lv", "mg", "mi", "mk", "ml", "mn", "mr", "ms", "mt",
    "my", "ne", "nl", "nn", "no", "oc", "pa", "pl", "ps", "pt", "ro", "ru",
    "sa", "sd", "si", "sk", "sl", "sn", "so", "sq", "sr", "su", "sv", "sw",
    "ta", "te", "tg", "th", "tk", "tl", "tr", "tt", "uk", "ur", "uz", "vi",
    "yi", "yo", "zh", "yue", "none"
]
subFile.type = "selection"
subFile.default = "vtt"
subFile.supported = [
    "srt", "vtt", "txt", "tsv", "json", "aud"
]
chunk_size.type = "int"
batch_size.type = "int"

[OUTPUTS]
result.type = "string"
task.type = "string"
model_name.type = "string"
error.type = "string"
align_result.type = "json"
sub_file.type = "string"


[STATIC]
"/whisperx/" = { file = "index.html" }
"/whisperx/static/js/tailwind.js" = { file = "../../frontend/static/vendor/tailwind/tailwind_335_plugin_forms.min.js" }
"/whisperx/static/js/highlight.js" = { file = "../../frontend/static/vendor/highlight/highlight.min.js" }
"/whisperx/static/js/" = { path = "static/js/" }
"/whisperx/static/css/highlight.css" = { file = "../../frontend/static/vendor/highlight/styles/github.min.css" }
"/whisperx/static/css/style.css" = { file = "static/css/style.css" }