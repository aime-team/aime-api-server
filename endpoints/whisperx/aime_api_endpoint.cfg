# AIME API Endpoint Configuration File
#
# Copyright (c) AIME GmbH and affiliates. Find more info at https://www.aime.info/api
#
# This software may be used and distributed according to the terms of the MIT LICENSE

[ENDPOINT]
title = "WhisperX"
name = "whisper_x"
description = "WhisperX example API"
methods = ["GET", "POST"]
version = 0

[WORKER]
job_type = "whisper_x"
auth_key = "5b07e305b50505ca2b3284b4ae5f65d8"

[CLIENTS]
client_request_limit = 0
provide_worker_meta_data = true	# default is false

# client default authorization and authentication method (overwrites the value of server configuration)
# Available authentication: None, User, IP, Pubkey
# authentication = "User"
# Available authorization: None, Key
# authorization = "Key"
# authorization_keys = { "aime" = "6a17e2a5b70603cb1a3294b4a1df67da" }


[SESSION]
# variables that should be kept in the session between calls and provided to the worker as additional inputs

[INPUTS]
text_input.type = "string"
audio_input.type = "audio"
audio_input.format = { supported = [ "MP3" ], default = "MP3", auto_convert = true }
audio_input.sample_rate = { supported = [ 16000 ], default = 16000, auto_convert = true }
audio_input.sample_bit_depth = { supported = [ 16, 32], default = 16, auto_convert = true }
audio_input.audio_bit_rate = { max = 64000, auto_convert = true } # in bit/s
audio_input.channels = { supported = [1], default = 1, auto_convert = true }
audio_input.check_conversion = true # another ffprobe check and logs a warning if the target media parameters are different to the measured media parameters
audio_input.input_temp_file = "auto" # "auto": temp file is generated automatically for image format "tiff" and "gif" and for input type "audio", ("yes", "no", "auto")
audio_input.output_temp_file = "auto" # "auto": temp file is generated automatically for conversion to "mp4" format, ("yes", "no", "auto")

generate_audio.type = "bool"

[OUTPUTS]
text_output.type = "string"
audio_output.type = "audio"
audio_output.format = "wav"
task.type = "string"
model_name.type = "string"
error.type = "string"


[PROGRESS]
    [PROGRESS.OUTPUTS]


[STATIC]
"/whisperx/" = { file = "index.html" }
"/whisperx/static/js/tailwind.js" = { file = "static/js/tailwind.js" }
"/whisperx/static/js/highlight.js" = { file = "static/js//highlight.js" }
"/whisperx/static/js/" = { path = "static/js/" }
"/whisperx/static/css/highlight.css" = { file = "static/css/highlight.css" }
"/whisperx/static/css/style.css" = { file = "static/css/style.css" }